/l/users/abdelrahman.sadallah/Llama/word_initial_disjoint
decrypting-crosswords
save_dir /l/users/abdelrahman.sadallah/Llama/word_initial_disjoint
n_shots 0
cryptonite_quick 0
indicator_type_shots 0
indicators_dict_path data/indicators_examples.json
save_file outputs.txt
num_examples 0
dataset_type old
spaces 0
percentage 0
logging_dir ./logs
use_flash_attention_2 1
report_to all
max_steps 3000
save_steps 500
logging_steps 500
max_seq_length 256
checkpoint_path None
do_eval False
do_train False
eval_accumulation_steps 1
evaluation_strategy steps
eval_steps 500
log_level info
logging_strategy steps
save_total_limit 10
run_name meta-llama/Llama-2-7b-hf
base_prompt The next line is a clue for a cryptic crossword. The clue consists of a definition part and a wordplay part. The answer consists of {n_words} words, and the number of characters in the answer is {n_chars}. Output only the answer.
train_dataset_path data/clue_json/guardian/word_initial_disjoint/train.json
test_dataset_path data/clue_json/guardian/word_initial_disjoint/val.json
field prompt
model_name meta-llama/Llama-2-7b-hf
output_dir ./experiments
per_device_train_batch_size 64
per_device_val_batch_size 32
gradient_accumulation_steps 2
optim paged_adamw_32bit
learning_rate 0.0002
max_grad_norm 0.3
warmup_ratio 0.03
lr_scheduler_type constant
group_by_length True
bnb_4bit_quant_type nf4
bnb_4bit_compute_dtype bfloat16
bnb_4bit_use_double_quant True
gradient_checkpointing True
lora_alpha 16
lora_dropout 0.1
lora_r 64
bias none
task_type CAUSAL_LM
lora_target_modules ['q_proj', 'up_proj', 'o_proj', 'k_proj', 'down_proj', 'gate_proj', 'v_proj']
trainable params: 262410240 || all params: 3500412928 || trainable%: 7.496550989769399
Loading the datasets
------------------ Using Old Datast ------------------
------------------ Using Old Datast ------------------
save_steps: 500
logging_steps: 500
Saving the model to /l/users/abdelrahman.sadallah/Llama/word_initial_disjoint
Starting training
checkpoint_path: None
{'loss': 2.7777, 'learning_rate': 0.0002, 'epoch': 0.0}
{'loss': 0.6501, 'learning_rate': 0.0002, 'epoch': 0.84}
{'eval_loss': 0.6523790955543518, 'eval_runtime': 590.0191, 'eval_samples_per_second': 55.3, 'eval_steps_per_second': 1.729, 'epoch': 0.84}
{'loss': 0.6057, 'learning_rate': 0.0002, 'epoch': 1.69}
{'eval_loss': 0.6170052289962769, 'eval_runtime': 589.5797, 'eval_samples_per_second': 55.341, 'eval_steps_per_second': 1.73, 'epoch': 1.69}
{'loss': 0.5799, 'learning_rate': 0.0002, 'epoch': 2.53}
{'eval_loss': 0.6173258423805237, 'eval_runtime': 589.854, 'eval_samples_per_second': 55.315, 'eval_steps_per_second': 1.729, 'epoch': 2.53}
{'loss': 0.5491, 'learning_rate': 0.0002, 'epoch': 3.37}
{'eval_loss': 0.6240508556365967, 'eval_runtime': 589.7199, 'eval_samples_per_second': 55.328, 'eval_steps_per_second': 1.73, 'epoch': 3.37}
{'loss': 0.5166, 'learning_rate': 0.0002, 'epoch': 4.22}
{'eval_loss': 0.6459479331970215, 'eval_runtime': 589.6753, 'eval_samples_per_second': 55.332, 'eval_steps_per_second': 1.73, 'epoch': 4.22}
{'loss': 0.4762, 'learning_rate': 0.0002, 'epoch': 5.06}
{'eval_loss': 0.6860148906707764, 'eval_runtime': 589.6783, 'eval_samples_per_second': 55.332, 'eval_steps_per_second': 1.73, 'epoch': 5.06}
{'train_runtime': 24582.0102, 'train_samples_per_second': 15.621, 'train_steps_per_second': 0.122, 'train_loss': 0.5636461495558421, 'epoch': 5.06}
Done training
PeftModelForCausalLM(
  (base_model): LoraModel(
    (model): LlamaForCausalLM(
      (model): LlamaModel(
        (embed_tokens): Embedding(32000, 4096)
        (layers): ModuleList(
          (0-31): 32 x LlamaDecoderLayer(
            (self_attn): LlamaFlashAttention2(
              (q_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
              )
              (k_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
              )
              (v_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
              )
              (o_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
              )
              (rotary_emb): LlamaRotaryEmbedding()
            )
            (mlp): LlamaMLP(
              (gate_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=11008, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=11008, bias=False)
              )
              (up_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=11008, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=11008, bias=False)
              )
              (down_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=11008, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=11008, out_features=4096, bias=False)
              )
              (act_fn): SiLU()
            )
            (input_layernorm): LlamaRMSNorm()
            (post_attention_layernorm): LlamaRMSNorm()
          )
        )
        (norm): LlamaRMSNorm()
      )
      (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
    )
  )
)
