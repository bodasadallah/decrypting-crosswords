/l/users/abdelrahman.sadallah/Mistral/naive_random_unique
decrypting-crosswords
save_dir /l/users/abdelrahman.sadallah/Mistral/naive_random_unique
n_shots 0
cryptonite_quick 0
indicator_type_shots 0
indicators_dict_path data/indicators_examples.json
save_file outputs.txt
num_examples 0
dataset_type new
spaces 0
percentage 0
logging_dir ./logs
use_flash_attention_2 1
report_to all
max_steps 2000
save_steps 500
logging_steps 500
max_seq_length 256
checkpoint_path None
do_eval False
do_train False
eval_accumulation_steps 1
evaluation_strategy steps
eval_steps 500
log_level info
logging_strategy steps
save_total_limit 2
run_name mistralai/Mistral-7B-v0.1
base_prompt The next line is a clue for a cryptic crossword. The clue consists of a definition part and a wordplay part. The answer consists of {n_words} words, and the number of characters in the answer is {n_chars}. Output only the answer.
train_dataset_path boda/naive_random_unique
test_dataset_path boda/naive_random_unique
field prompt
model_name mistralai/Mistral-7B-v0.1
output_dir ./experiments
per_device_train_batch_size 128
per_device_val_batch_size 64
gradient_accumulation_steps 2
optim paged_adamw_32bit
learning_rate 0.0002
max_grad_norm 0.3
warmup_ratio 0.03
lr_scheduler_type constant
group_by_length True
bnb_4bit_quant_type nf4
bnb_4bit_compute_dtype bfloat16
bnb_4bit_use_double_quant True
gradient_checkpointing True
lora_alpha 16
lora_dropout 0.1
lora_r 64
bias none
task_type CAUSAL_LM
lora_target_modules ['q_proj', 'up_proj', 'o_proj', 'k_proj', 'down_proj', 'gate_proj', 'v_proj']
trainable params: 262410240 || all params: 3752071168 || trainable%: 6.993743675173274
Loading the datasets
------------------ Using New Datast ------------------
------------------ Using New Datast ------------------
save_steps: 500
logging_steps: 500
Saving the model to /l/users/abdelrahman.sadallah/Mistral/naive_random_unique
Starting training
checkpoint_path: None
{'loss': 2.7034, 'learning_rate': 0.0002, 'epoch': 0.01}
{'loss': 0.6666, 'learning_rate': 0.0002, 'epoch': 2.67}
{'eval_loss': 0.6750734448432922, 'eval_runtime': 116.2009, 'eval_samples_per_second': 72.667, 'eval_steps_per_second': 1.136, 'epoch': 2.67}
{'loss': 0.5111, 'learning_rate': 0.0002, 'epoch': 5.35}
{'eval_loss': 0.7750585675239563, 'eval_runtime': 115.7735, 'eval_samples_per_second': 72.935, 'eval_steps_per_second': 1.14, 'epoch': 5.35}
{'loss': 0.297, 'learning_rate': 0.0002, 'epoch': 8.02}
{'eval_loss': 0.9093664288520813, 'eval_runtime': 115.8521, 'eval_samples_per_second': 72.886, 'eval_steps_per_second': 1.139, 'epoch': 8.02}
{'loss': 0.198, 'learning_rate': 0.0002, 'epoch': 10.7}
{'eval_loss': 0.9716271758079529, 'eval_runtime': 115.808, 'eval_samples_per_second': 72.914, 'eval_steps_per_second': 1.14, 'epoch': 10.7}
{'train_runtime': 20600.8474, 'train_samples_per_second': 24.853, 'train_steps_per_second': 0.097, 'train_loss': 0.4191890876293182, 'epoch': 10.7}
Done training
PeftModelForCausalLM(
  (base_model): LoraModel(
    (model): MistralForCausalLM(
      (model): MistralModel(
        (embed_tokens): Embedding(32000, 4096)
        (layers): ModuleList(
          (0-31): 32 x MistralDecoderLayer(
            (self_attn): MistralFlashAttention2(
              (q_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
              )
              (k_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=1024, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=1024, bias=False)
              )
              (v_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=1024, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=1024, bias=False)
              )
              (o_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
              )
              (rotary_emb): MistralRotaryEmbedding()
            )
            (mlp): MistralMLP(
              (gate_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=14336, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=14336, bias=False)
              )
              (up_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=14336, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=4096, out_features=14336, bias=False)
              )
              (down_proj): Linear4bit(
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=14336, out_features=64, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=64, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (base_layer): Linear4bit(in_features=14336, out_features=4096, bias=False)
              )
              (act_fn): SiLUActivation()
            )
            (input_layernorm): MistralRMSNorm()
            (post_attention_layernorm): MistralRMSNorm()
          )
        )
        (norm): MistralRMSNorm()
      )
      (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
    )
  )
)
